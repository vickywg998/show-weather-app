{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nvar weatherURL = \"https://fcc-weather-api.glitch.me/api/current?lat=\".concat(lat, \"&lon=\").concat(lon);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      lon: null\n    };\n\n    _this.fetchWeather = function () {\n      axios.get(weatherUrl(lat, lng)).then(function (response) {\n        var _response$data$result = response.data.results[0].geometry,\n            lat = _response$data$result.lat,\n            lng = _response$data$result.lng;\n        return {\n          lat: lat,\n          lng: lng\n        };\n      }).then(function (_ref) {\n        var lat = _ref.lat,\n            lng = _ref.lng;\n        axios.get(weatherUrl(lat, lng)).then(function (response) {\n          var _response$data$curren = response.data.currently,\n              summary = _response$data$curren.summary,\n              temperature = _response$data$curren.temperature;\n          var timezone = response.data.timezone;\n\n          _this.setState({\n            city: timezone,\n            summary: summary,\n            temperature: temperature,\n            data: response.data\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Vicky's Awesome Weather App\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Longitude: \", this.state.lng));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","axios","weatherURL","lat","lon","App","state","fetchWeather","get","weatherUrl","lng","then","response","data","results","geometry","currently","summary","temperature","timezone","setState","city","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,UAAU,+DAAwDC,GAAxD,kBAAmEC,GAAnE,CAAhB;;IACMC,G;;;;;;;;;;;;;;;;;UACNC,K,GAAQ;AACFH,MAAAA,GAAG,EAAE,IADH;AAEFC,MAAAA,GAAG,EAAE;AAFH,K;;UAMJG,Y,GAAe,YAAM;AACnBN,MAAAA,KAAK,CAACO,GAAN,CAAUC,UAAU,CAACN,GAAD,EAAMO,GAAN,CAApB,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAAA,oCACKA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,QAD9B;AAAA,YACRZ,GADQ,yBACRA,GADQ;AAAA,YACHO,GADG,yBACHA,GADG;AAEhB,eAAO;AAAEP,UAAAA,GAAG,EAAHA,GAAF;AAAOO,UAAAA,GAAG,EAAHA;AAAP,SAAP;AACD,OAJD,EAKCC,IALD,CAKM,gBAAiB;AAAA,YAAdR,GAAc,QAAdA,GAAc;AAAA,YAATO,GAAS,QAATA,GAAS;AACnBT,QAAAA,KAAK,CAACO,GAAN,CAAUC,UAAU,CAACN,GAAD,EAAMO,GAAN,CAApB,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAAA,sCACeA,QAAQ,CAACC,IAAT,CAAcG,SAD7B;AAAA,cACTC,OADS,yBACTA,OADS;AAAA,cACAC,WADA,yBACAA,WADA;AAAA,cAERC,QAFQ,GAEKP,QAAQ,CAACC,IAFd,CAERM,QAFQ;;AAGhB,gBAAKC,QAAL,CAAc;AACZC,YAAAA,IAAI,EAAEF,QADM;AAEZF,YAAAA,OAAO,EAAPA,OAFY;AAGZC,YAAAA,WAAW,EAAXA,WAHY;AAIZL,YAAAA,IAAI,EAAED,QAAQ,CAACC;AAJH,WAAd;AAMD,SAVH;AAWH,OAjBD;AAkBD,K;;;;;;;yCAGkB;AAAA;;AAEnBS,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnD,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEjB,UAAAA,GAAG,EAAEsB,QAAQ,CAACC,MAAT,CAAgBC,QAAvB;AAAiCjB,UAAAA,GAAG,EAAEe,QAAQ,CAACC,MAAT,CAAgBE;AAAtD,SAAd;AACD,OAFD,EAEG,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFN;AAID;;;6BAEQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKvB,KAAL,CAAWH,GAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAe,KAAKG,KAAL,CAAWI,GAA1B,CAHF,CADF;AAOD;;;;EA9CeV,S;;AAiDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\n\nconst weatherURL = `https://fcc-weather-api.glitch.me/api/current?lat=${lat}&lon=${lon}`\nclass App extends Component {\nstate = {\n      lat: null,\n      lon: null,\n    }\n  \n\n    fetchWeather = () => {\n      axios.get(weatherUrl(lat, lng))\n      .then(response => {\n        const { lat, lng } = response.data.results[0].geometry\n        return { lat, lng }\n      })\n      .then(({ lat, lng}) => {\n          axios.get(weatherUrl(lat, lng))\n            .then(response => {\n              const {summary, temperature} = response.data.currently\n              const { timezone } = response.data\n              this.setState({\n                city: timezone,\n                summary,\n                temperature,\n                data: response.data\n              })\n            })\n      })\n    }\n\n\n  componentWillMount() {\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ lat: position.coords.latitude, lng: position.coords.longitude });\n    }, err => console.log(err)\n    );\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Vicky's Awesome Weather App</h1>\n        <p>Latitude: {this.state.lat}</p>\n        <p>Longitude: {this.state.lng}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}