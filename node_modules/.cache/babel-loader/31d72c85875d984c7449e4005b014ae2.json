{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nvar db = require('db');\n\nrequire('dotenv').config();\n\nvar weatherURL = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\";\nvar weatherAPI = process.env.WEATHER_API;\nconsole.log(weatherAPI);\nvar getLocation = new Promise(function (resolve, reject) {\n  if (navigator.geolocation) {\n    console.log('Location aquired');\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      var coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      resolve(coords);\n    });\n  } else {\n    alert('Sorry, you need to enable location services in your browser');\n  }\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      myLocation: null,\n      weatherData: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getLocation.then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          myLocation: response\n        });\n      }).then(function () {\n        var _this2$state$myLocati = _this2.state.myLocation,\n            lat = _this2$state$myLocati.lat,\n            long = _this2$state$myLocati.long;\n        axios.get(\"\".concat(weatherURL).concat(weatherAPI).concat(lat, \",\").concat(long)).then(function (response) {\n          _this2.setState({\n            weatherData: response.data,\n            loading: false\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.weatherData);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","axios","db","require","config","weatherURL","weatherAPI","process","env","WEATHER_API","console","log","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","long","longitude","alert","App","state","loading","myLocation","weatherData","then","response","setState","get","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,IAAMC,UAAU,0EAAhB;AACA,IAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA/B;AACAC,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAGA,IAAMM,WAAW,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnD,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAK,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,GAAG,EAAI;AAC9C,UAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEF,GAAG,CAACC,MAAJ,CAAWE,QADH;AAEbC,QAAAA,IAAI,EAAEJ,GAAG,CAACC,MAAJ,CAAWI;AAFJ,OAAf;AAIAV,MAAAA,OAAO,CAACM,MAAD,CAAP;AACD,KAND;AAOD,GATD,MASO;AACLK,IAAAA,KAAK,CAAC,6DAAD,CAAL;AACD;AACF,CAbmB,CAApB;;IAeMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,WAAW,EAAE;AAHT,K;;;;;;wCAOY;AAAA;;AAClBlB,MAAAA,WAAW,CACRmB,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEJ,UAAAA,UAAU,EAAEG;AAAd,SAAd;AACD,OAJH,EAKGD,IALH,CAKQ,YAAM;AAAA,oCACY,MAAI,CAACJ,KAAL,CAAWE,UADvB;AAAA,YACFR,GADE,yBACFA,GADE;AAAA,YACGE,IADH,yBACGA,IADH;AAEVtB,QAAAA,KAAK,CAACiC,GAAN,WACK7B,UADL,SACkBC,UADlB,SAC+Be,GAD/B,cACsCE,IADtC,GAEEQ,IAFF,CAEO,UAAAC,QAAQ,EAAI;AACjB,UAAA,MAAI,CAACC,QAAL,CAAc;AACZH,YAAAA,WAAW,EAAEE,QAAQ,CAACG,IADV;AAEZP,YAAAA,OAAO,EAAE;AAFG,WAAd;AAID,SAPD;AAQD,OAfH;AAgBD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKD,KAAL,CAAWG,WAAjC,CADF;AAGD;;;;EA/Be9B,S;;AAkClB,eAAe0B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nconst db = require('db')\nrequire('dotenv').config();\n\n\nconst weatherURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/`\nconst weatherAPI = process.env.WEATHER_API;\nconsole.log(weatherAPI)\n\n\nconst getLocation = new Promise((resolve, reject) => {\n  if (navigator.geolocation) {\n    console.log('Location aquired');\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      }\n      resolve(coords)\n    })\n  } else {\n    alert('Sorry, you need to enable location services in your browser')\n  }\n})\n\nclass App extends Component {\n  state = {\n      loading: true,\n      myLocation: null,\n      weatherData: null\n    };\n  \n\n  componentDidMount() {\n    getLocation\n      .then(response => {\n        console.log(response)\n        this.setState({ myLocation: response });\n      })\n      .then(() => {\n        const { lat, long } = this.state.myLocation;\n        axios.get(\n          `${weatherURL}${weatherAPI}${lat},${long}`\n        ).then(response => {\n          this.setState({\n            weatherData: response.data,\n            loading: false\n          });\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">{this.state.weatherData}</div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}