{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/global.scss\";\nimport Skycons from \"react-skycons\";\nimport axios from \"axios\";\nvar weatherURL = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\";\nvar weatherAPI = \"d3135eb8e134061565fcb7fe736dd07e/\";\nconsole.log(weatherAPI);\nvar getLocation = new Promise(function (resolve, reject) {\n  if (navigator.geolocation) {\n    console.log(\"Location aquired\");\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      var coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      resolve(coords);\n    });\n  } else {\n    alert(\"Sorry, you need to enable location services in your browser\");\n  }\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      myLocation: null,\n      weatherData: null,\n      showCelsius: false\n    };\n\n    _this.handleToggleVisibility = function (event) {\n      event.preventDefault();\n\n      _this.setState(function (prevState) {\n        return {\n          showCelsius: !prevState.showCelsius\n        };\n      });\n    };\n\n    _this.setCelcius = function () {\n      var cel = (_this.state.apparentTemperature - 32) * 5 / 9;\n      return cel + \"Â° C\";\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getLocation.then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          myLocation: response\n        });\n      }).then(function () {\n        var _this2$state$myLocati = _this2.state.myLocation,\n            lat = _this2$state$myLocati.lat,\n            long = _this2$state$myLocati.long;\n        axios.get(\"\".concat(weatherURL).concat(weatherAPI).concat(lat, \",\").concat(long)).then(function (response) {\n          console.log(response.data);\n          var _response$data$curren = response.data.currently,\n              summary = _response$data$curren.summary,\n              apparentTemperature = _response$data$curren.apparentTemperature,\n              icon = _response$data$curren.icon;\n          var timezone = response.data.timezone;\n\n          _this2.setState({\n            weatherData: response.data,\n            summary: summary,\n            timezone: timezone,\n            apparentTemperature: apparentTemperature,\n            icon: icon.toUpperCase().replace(/-/g, \"_\"),\n            loading: false\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = {\n        width: \"50%\",\n        height: \"50%\"\n      };\n      console.log(this.state.icon);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"weather__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"weather__wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Weather App\"), React.createElement(Skycons, {\n        color: \"black\",\n        icon: this.state.icon,\n        autoplay: false,\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Current City: \", this.state.timezone), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"The weather right now is: \", this.state.summary), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.showCelsius && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Celcius= \", this.setCelcius(this.state.apparentTemperature)), !this.state.showCelsius && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Fahrenheit=\", this.state.apparentTemperature, \"\\xB0 F\"))), React.createElement(\"button\", {\n        onClick: this.handleToggleVisibility,\n        className: \"toggle__button--style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.showCelsius === true ? \"There you go non-Americans!\" : \"Change to Celsius\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","Skycons","axios","weatherURL","weatherAPI","console","log","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","long","longitude","alert","App","state","loading","myLocation","weatherData","showCelsius","handleToggleVisibility","event","preventDefault","setState","prevState","setCelcius","cel","apparentTemperature","then","response","get","data","currently","summary","icon","timezone","toUpperCase","replace","styles","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/global.scss\";\nimport Skycons from \"react-skycons\";\nimport axios from \"axios\";\n\nconst weatherURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/`;\nconst weatherAPI = \"d3135eb8e134061565fcb7fe736dd07e/\";\nconsole.log(weatherAPI);\n\nconst getLocation = new Promise((resolve, reject) => {\n  if (navigator.geolocation) {\n    console.log(\"Location aquired\");\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      resolve(coords);\n    });\n  } else {\n    alert(\"Sorry, you need to enable location services in your browser\");\n  }\n});\n\nclass App extends Component {\n  state = {\n    loading: true,\n    myLocation: null,\n    weatherData: null,\n    showCelsius: false\n  };\n\n  componentDidMount() {\n    getLocation\n      .then(response => {\n        console.log(response);\n        this.setState({ myLocation: response });\n      })\n      .then(() => {\n        const { lat, long } = this.state.myLocation;\n        axios.get(`${weatherURL}${weatherAPI}${lat},${long}`).then(response => {\n          console.log(response.data);\n          const {\n            summary,\n            apparentTemperature,\n            icon\n          } = response.data.currently;\n          const { timezone } = response.data;\n          this.setState({\n            weatherData: response.data,\n            summary: summary,\n            timezone: timezone,\n            apparentTemperature: apparentTemperature,\n            icon: icon.toUpperCase().replace(/-/g, \"_\"),\n            loading: false\n          });\n        });\n      });\n  }\n  handleToggleVisibility = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {\n        showCelsius: !prevState.showCelsius\n      };\n    });\n  };\n\n  setCelcius = () => {\n    var cel = ((this.state.apparentTemperature - 32) * 5) / 9;\n    return cel + \"Â° C\";\n  };\n\n  render() {\n    const styles = {\n      width: \"50%\",\n      height: \"50%\"\n    };\n    console.log(this.state.icon);\n    return (\n      <>\n        <div className=\"weather__container\">\n          <div className=\"weather__wrapper\">\n            <h1>Weather App</h1>\n            <Skycons\n              color=\"black\"\n              icon={this.state.icon}\n              autoplay={false}\n              style={styles}\n            />\n            <h2>Current City: {this.state.timezone}</h2>\n            <div className=\"\">The weather right now is: {this.state.summary}</div>\n\n            <div>\n              {this.state.showCelsius && (\n                <div>\n                  Celcius= {this.setCelcius(this.state.apparentTemperature)}\n                </div>\n              )}\n              {!this.state.showCelsius && (\n                <div>\n                  <p>Fahrenheit={this.state.apparentTemperature}Â° F</p>\n                </div>\n              )}\n            </div>\n            <button\n              onClick={this.handleToggleVisibility}\n              className=\"toggle__button--style\"\n            >\n              {this.state.showCelsius === true\n                ? \"There you go non-Americans!\"\n                : \"Change to Celsius\"}\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}