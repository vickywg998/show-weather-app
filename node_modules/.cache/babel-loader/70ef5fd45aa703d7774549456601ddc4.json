{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nvar weatherURL = \"https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139\";\n\nvar getLocation = function getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.watchPosition(showPosition);\n  } else {\n    return \"Geolocation is not supported by this browser.\";\n  }\n};\n\nvar showPosition = function showPosition(position) {\n  return \"Latitude: \" + position.coords.latitude + \"<br>Longitude: \" + position.coords.longitude;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.getLocation);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","axios","weatherURL","getLocation","navigator","geolocation","watchPosition","showPosition","position","coords","latitude","longitude","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,UAAU,GAAE,8DAAlB;;AAGA,IAAMC,WAAW,GAAE,SAAbA,WAAa,GAAM;AACvB,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCC,YAApC;AACD,GAFD,MAEO;AACT,WAAO,+CAAP;AACG;AACF,CAND;;AASA,IAAMA,YAAY,GAAE,SAAdA,YAAc,CAACC,QAAD,EAAc;AAChC,SAAO,eAAeA,QAAQ,CAACC,MAAT,CAAgBC,QAA/B,GACP,iBADO,GACaF,QAAQ,CAACC,MAAT,CAAgBE,SADpC;AAGD,CAJD;;IAQMC,G;;;;;;;;;;;;;6BAGK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKT,WADN,CADF;AAMD;;;;EAVeH,S;;AAalB,eAAeY,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\n\nconst weatherURL= \"https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139\"\n\n\nconst getLocation =() => {\n  if (navigator.geolocation) {\n    navigator.geolocation.watchPosition(showPosition);\n  } else { \nreturn \"Geolocation is not supported by this browser.\";\n  }\n}\n\n\nconst showPosition =(position) => {\n  return \"Latitude: \" + position.coords.latitude + \n  \"<br>Longitude: \" + position.coords.longitude;\n \n}\n\n\n\nclass App extends Component {\n\n \n  render() {\n    return (\n      <div>\n      {this.getLocation}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}