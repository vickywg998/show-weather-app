{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nvar weatherURL = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\";\nvar weatherAPI = 'f815af3a03b5f0d8c1fbfea0f95d1794/';\nvar corsAnywhere = 'https://cors-anywhere.herokuapp.com/';\n\nvar getLocation = function getLocation() {\n  if (navigator.geolocation) {\n    console.log('Location aquired');\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      var coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      return coords;\n    });\n  } else {\n    alert('Sorry, you need to enable location services in your browser');\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      lon: null,\n      data: []\n    };\n\n    _this.fetchWeather = function () {\n      axios.get(weatherURL).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          data: response\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      }, function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Vicky's Awesome Weather App\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Longitude: \", this.state.lon));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","axios","weatherURL","weatherAPI","corsAnywhere","getLocation","navigator","geolocation","console","log","getCurrentPosition","pos","coords","lat","latitude","long","longitude","alert","App","state","lon","data","fetchWeather","get","then","response","setState","position","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,UAAU,0EAAhB;AACA,IAAMC,UAAU,GAAG,mCAAnB;AACA,IAAMC,YAAY,GAAG,sCAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAH,IAAAA,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyC,UAAAC,GAAG,EAAI;AAC9C,UAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEF,GAAG,CAACC,MAAJ,CAAWE,QADH;AAEbC,QAAAA,IAAI,EAAEJ,GAAG,CAACC,MAAJ,CAAWI;AAFJ,OAAf;AAIA,aAAOJ,MAAP;AACD,KAND;AAOD,GATD,MASO;AACLK,IAAAA,KAAK,CAAC,6DAAD,CAAL;AACD;AACF,CAbD;;IAeMC,G;;;;;;;;;;;;;;;;;UACNC,K,GAAQ;AACFN,MAAAA,GAAG,EAAE,IADH;AAEFO,MAAAA,GAAG,EAAE,IAFH;AAGFC,MAAAA,IAAI,EAAE;AAHJ,K;;UAOJC,Y,GAAe,YAAM;AACnBrB,MAAAA,KAAK,CAACsB,GAAN,CAAUrB,UAAV,EACCsB,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;;AACA,cAAKC,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAEI;AAAP,SAAd;AACD,OAJD;AAMD,K;;;;;;;yCAGkB;AAAA;;AAEnBnB,MAAAA,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyC,UAAAiB,QAAQ,EAAI;AACnD,QAAA,MAAI,CAACD,QAAL,CAAc;AAAEb,UAAAA,GAAG,EAAEc,QAAQ,CAACf,MAAT,CAAgBE,QAAvB;AAAiCM,UAAAA,GAAG,EAAEO,QAAQ,CAACf,MAAT,CAAgBI;AAAtD,SAAd;AACD,OAFD,EAEG,UAAAY,GAAG;AAAA,eAAIpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAAJ;AAAA,OAFN;AAID;;;6BAEQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKT,KAAL,CAAWN,GAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAe,KAAKM,KAAL,CAAWC,GAA1B,CAHF,CADF;AAOD;;;;EAnCepB,S;;AAsClB,eAAekB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\n\nconst weatherURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/`\nconst weatherAPI = 'f815af3a03b5f0d8c1fbfea0f95d1794/'\nconst corsAnywhere = 'https://cors-anywhere.herokuapp.com/'\n\nconst getLocation = () => {\n  if (navigator.geolocation) {\n    console.log('Location aquired');\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      }\n      return coords\n    })\n  } else {\n    alert('Sorry, you need to enable location services in your browser')\n  }\n}\n\nclass App extends Component {\nstate = {\n      lat: null,\n      lon: null,\n      data: []\n    }\n  \n\n    fetchWeather = () => {\n      axios.get(weatherURL)\n      .then(response => {\n        console.log(response);\n        this.setState({data: response})\n      })\n     \n    }\n\n\n  componentWillMount() {\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ lat: position.coords.latitude, lon: position.coords.longitude });\n    }, err => console.log(err)\n    );\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Vicky's Awesome Weather App</h1>\n        <p>Latitude: {this.state.lat}</p>\n        <p>Longitude: {this.state.lon}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}