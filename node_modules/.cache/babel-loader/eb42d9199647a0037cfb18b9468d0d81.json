{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nvar weatherURL = \"https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      lng: null\n    };\n\n    _this.fetchWeather = function (city) {\n      axios.get(locationUrl(city)).then(function (response) {\n        var _response$data$result = response.data.results[0].geometry,\n            lat = _response$data$result.lat,\n            lng = _response$data$result.lng;\n        return {\n          lat: lat,\n          lng: lng\n        };\n      }).then(function (_ref) {\n        var lat = _ref.lat,\n            lng = _ref.lng;\n        axios.get(weatherUrl(lat, lng)).then(function (response) {\n          var _response$data$curren = response.data.currently,\n              summary = _response$data$curren.summary,\n              temperature = _response$data$curren.temperature;\n          var timezone = response.data.timezone;\n\n          _this.setState({\n            city: timezone,\n            summary: summary,\n            temperature: temperature,\n            data: response.data\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n\n        console.log(position.coords);\n      }, function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Vicky's Awesome Current Weather App\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"You're currently in: \"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Current Position:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Longitude: \", this.state.lng));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","axios","weatherURL","App","state","lat","lng","fetchWeather","city","get","locationUrl","then","response","data","results","geometry","weatherUrl","currently","summary","temperature","timezone","setState","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAE,8DAAlB;;IAEMC,G;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACHC,MAAAA,GAAG,EAAE,IADF;AAEHC,MAAAA,GAAG,EAAE;AAFF,K;;UAKLC,Y,GAAe,UAACC,IAAD,EAAU;AACvBP,MAAAA,KAAK,CAACQ,GAAN,CAAUC,WAAW,CAACF,IAAD,CAArB,EACCG,IADD,CACM,UAAAC,QAAQ,EAAI;AAAA,oCACKA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,QAD9B;AAAA,YACRV,GADQ,yBACRA,GADQ;AAAA,YACHC,GADG,yBACHA,GADG;AAEhB,eAAO;AAAED,UAAAA,GAAG,EAAHA,GAAF;AAAOC,UAAAA,GAAG,EAAHA;AAAP,SAAP;AACD,OAJD,EAKCK,IALD,CAKM,gBAAiB;AAAA,YAAdN,GAAc,QAAdA,GAAc;AAAA,YAATC,GAAS,QAATA,GAAS;AACnBL,QAAAA,KAAK,CAACQ,GAAN,CAAUO,UAAU,CAACX,GAAD,EAAMC,GAAN,CAApB,EACGK,IADH,CACQ,UAAAC,QAAQ,EAAI;AAAA,sCACeA,QAAQ,CAACC,IAAT,CAAcI,SAD7B;AAAA,cACTC,OADS,yBACTA,OADS;AAAA,cACAC,WADA,yBACAA,WADA;AAAA,cAERC,QAFQ,GAEKR,QAAQ,CAACC,IAFd,CAERO,QAFQ;;AAGhB,gBAAKC,QAAL,CAAc;AACZb,YAAAA,IAAI,EAAEY,QADM;AAEZF,YAAAA,OAAO,EAAPA,OAFY;AAGZC,YAAAA,WAAW,EAAXA,WAHY;AAIZN,YAAAA,IAAI,EAAED,QAAQ,CAACC;AAJH,WAAd;AAMD,SAVH;AAWH,OAjBD;AAkBD,K;;;;;;;yCACkB;AAAA;;AAEnBS,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnD,QAAA,MAAI,CAACJ,QAAL,CAAc;AAAEhB,UAAAA,GAAG,EAAEoB,QAAQ,CAACC,MAAT,CAAgBC,QAAvB;AAAiCrB,UAAAA,GAAG,EAAEmB,QAAQ,CAACC,MAAT,CAAgBE;AAAtD,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;AACD,OAHD,EAGG,UAAAK,GAAG;AAAA,eAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,OAHN;AAKD;;;6BAEQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAK3B,KAAL,CAAWC,GAAzB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAe,KAAKD,KAAL,CAAWE,GAA1B,CALF,CADF;AASD;;;;EA9CeN,S;;AAiDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nconst weatherURL= \"https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139\"\n\nclass App extends Component {\n state = {\n      lat: null,\n      lng: null,\n    }\n  \n    fetchWeather = (city) => {\n      axios.get(locationUrl(city))\n      .then(response => {\n        const { lat, lng } = response.data.results[0].geometry\n        return { lat, lng }\n      })\n      .then(({ lat, lng}) => {\n          axios.get(weatherUrl(lat, lng))\n            .then(response => {\n              const {summary, temperature} = response.data.currently\n              const { timezone } = response.data\n              this.setState({\n                city: timezone,\n                summary,\n                temperature,\n                data: response.data\n              })\n            })\n      })\n    }\n  componentWillMount() {\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({ lat: position.coords.latitude, lng: position.coords.longitude });\n      console.log(position.coords)\n    }, err => console.log(err)\n    );\n  }\n\n  render() {\n\n    return (\n      <div >\n        <div>Vicky's Awesome Current Weather App</div>\n        <h1>You're currently in: </h1>\n        <h1>Current Position:</h1>\n        <p>Latitude: {this.state.lat}</p>\n        <p>Longitude: {this.state.lng}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}