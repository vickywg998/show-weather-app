{"ast":null,"code":"import _classCallCheck from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/VickyW/Web-projects/show-local-weather2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/VickyW/Web-projects/show-local-weather2/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/global.scss\";\nimport Skycons from \"react-skycons\";\nimport axios from \"axios\";\nvar weatherURL = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\";\nvar weatherAPI = \"d3135eb8e134061565fcb7fe736dd07e/\";\nconsole.log(weatherAPI);\nvar getLocation = new Promise(function (resolve, reject) {\n  if (navigator.geolocation) {\n    console.log(\"Location aquired\");\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      var coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      resolve(coords);\n    });\n  } else {\n    alert(\"Sorry, you need to enable location services in your browser\");\n  }\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      myLocation: null,\n      weatherData: null,\n      visibility: false\n    };\n\n    _this.handleToggleVisibility = function () {\n      _this.setState(function (prevState) {\n        return {\n          visibility: !prevState.visibility\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getLocation.then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          myLocation: response\n        });\n      }).then(function () {\n        var _this2$state$myLocati = _this2.state.myLocation,\n            lat = _this2$state$myLocati.lat,\n            long = _this2$state$myLocati.long;\n        axios.get(\"\".concat(weatherURL).concat(weatherAPI).concat(lat, \",\").concat(long)).then(function (response) {\n          console.log(response.data);\n          var _response$data$curren = response.data.currently,\n              summary = _response$data$curren.summary,\n              apparentTemperature = _response$data$curren.apparentTemperature,\n              icon = _response$data$curren.icon;\n          var timezone = response.data.timezone;\n\n          _this2.setState({\n            weatherData: response.data,\n            summary: summary,\n            timezone: timezone,\n            apparentTemperature: apparentTemperature,\n            icon: icon.toUpperCase().replace(/-/g, '_'),\n            loading: false\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = {\n        width: \"10%\",\n        height: \"10%\"\n      };\n      console.log(this.state.icon);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Weather App\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Current City: \", this.state.timezone), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"The weather right now is: \", this.state.summary), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.icon), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.apparentTemperature), React.createElement(Skycons, {\n        color: \"black\",\n        icon: this.state.icon,\n        autoplay: false,\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Fahrenheit to Celcius toggler\"), React.createElement(\"button\", {\n        onClick: this.handleToggleVisibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.visibility ? 'Farenheit' : 'Celisius'), this.state.visibility && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"You can now see and read me man!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" I am using \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"state\"), \" to toggle this info instead of \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"if\"), \" and \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"else\"), \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/VickyW/Web-projects/show-local-weather2/src/App.js"],"names":["React","Component","Skycons","axios","weatherURL","weatherAPI","console","log","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","long","longitude","alert","App","state","loading","myLocation","weatherData","visibility","handleToggleVisibility","setState","prevState","then","response","get","data","currently","summary","apparentTemperature","icon","timezone","toUpperCase","replace","styles","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/global.scss\";\nimport Skycons from \"react-skycons\";\nimport axios from \"axios\";\n\nconst weatherURL = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/`;\nconst weatherAPI = \"d3135eb8e134061565fcb7fe736dd07e/\";\nconsole.log(weatherAPI);\n\nconst getLocation = new Promise((resolve, reject) => {\n  if (navigator.geolocation) {\n    console.log(\"Location aquired\");\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = {\n        lat: pos.coords.latitude,\n        long: pos.coords.longitude\n      };\n      resolve(coords);\n    });\n  } else {\n    alert(\"Sorry, you need to enable location services in your browser\");\n  }\n});\n\n\n\n\nclass App extends Component {\n  state = {\n    loading: true,\n    myLocation: null,\n    weatherData: null,\n    visibility: false\n  };\n\n  componentDidMount() {\n    getLocation\n      .then(response => {\n        console.log(response);\n        this.setState({ myLocation: response });\n      })\n      .then(() => {\n        const { lat, long } = this.state.myLocation;\n        axios.get(`${weatherURL}${weatherAPI}${lat},${long}`).then(response => {\n          console.log(response.data);\n          const {\n            summary,\n            apparentTemperature,\n            icon\n          } = response.data.currently;\n          const { timezone } = response.data;\n          this.setState({\n            weatherData: response.data,\n            summary: summary,\n            timezone: timezone,\n            apparentTemperature: apparentTemperature,\n            icon: icon.toUpperCase().replace(/-/g, '_'),\n            loading: false\n          });\n        });\n      });\n  }\n  handleToggleVisibility=() => {\n    this.setState((prevState) => {\n        return {\n            visibility: !prevState.visibility\n        };\n    });\n  }\n\n  render() {\n    const styles = {\n      width: \"10%\",\n      height: \"10%\"\n      \n  };\n  console.log(this.state.icon)\n    return (\n      <div className=\"App\">\n        <h1>Weather App</h1>\n        <h2>Current City: {this.state.timezone}</h2>\n        <div>The weather right now is: {this.state.summary}</div>\n        <div>{this.state.icon}</div>\n        <div>{this.state.apparentTemperature}</div>\n        <Skycons color=\"black\" icon={this.state.icon} autoplay={false} style={styles} />\n        <div>\n                  <h1>Fahrenheit to Celcius toggler</h1>\n                  <button onClick={this.handleToggleVisibility}>\n                      {this.state.visibility ? 'Farenheit' : 'Celisius'}\n                  </button>\n                  {this.state.visibility && (\n                      <div>\n                          <p>You can now see and read me man!</p>\n                  <p> I am using <strong>state</strong> to toggle this info instead of <em>if</em> and <em>else</em> </p>\n                      </div>\n                  )}\n              \n              </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}